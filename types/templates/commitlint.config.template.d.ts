export namespace contentFile {
    export let folderPath: string;
    export let fileName: string;
    export let coverFile: boolean;
    export { contentFileContent as fileContent };
}
declare const contentFileContent: "/* eslint-disable no-undef */\n/* eslint-disable unicorn/prefer-module */\n/* eslint-disable no-useless-escape */\n\nmodule.exports = {\n  extends: [\n    '@commitlint/config-conventional',\n    '@commitlint/config-pnpm-scopes',\n  ],\n  parserPreset: 'conventional-changelog-conventionalcommits',\n  prompt: {\n    messages: {\n      skip: '[可跳过]',\n      max: '[字数上限: %d]',\n      min: '[字数下限: %d]',\n      emptyWarning: '此为必填项目, 不能为空白',\n      upperLimitWarning: '超过最大限制',\n      lowerLimitWarning: '低于最小限制',\n    },\n    questions: {\n      type: {\n        description: '择要提交的更改类型:',\n        enum: {\n          feat: {\n            description: '新功能/特性',\n            title: 'Features',\n            emoji: '✨',\n          },\n          fix: {\n            description: 'Bug修补',\n            title: 'Bug Fixes',\n            emoji: '🐛',\n          },\n          docs: {\n            description: '仅文档变更',\n            title: 'Documentation',\n            emoji: '📚',\n          },\n          style: {\n            description: '不影响含义的更改(空白、格式、错误码、分号等)',\n            title: 'Styles',\n            emoji: '💎',\n          },\n          refactor: {\n            description: '代码重构(既不修复bug也不添加特性的更改)',\n            title: 'Code Refactoring',\n            emoji: '📦',\n          },\n          perf: {\n            description: '改进性能的调整',\n            title: 'Performance Improvements',\n            emoji: '🚀',\n          },\n          test: {\n            description: '添加缺失的测试或纠正现有的测试',\n            title: 'Tests',\n            emoji: '🚨',\n          },\n          build: {\n            description:\n              '影响构建系统或外部依赖的更改(例如:gulp, broccoli, npm等)',\n            title: 'Builds',\n            emoji: '🛠',\n          },\n          ci: {\n            description:\n              '更改CI配置文件和脚本(例如:Travis、Circle、BrowserStack、SauceLabs等)',\n            title: 'Continuous Integrations',\n            emoji: '⚙️',\n          },\n          chore: {\n            description: '其他不修改src或测试文件的更改',\n            title: 'Chores',\n            emoji: '♻️',\n          },\n          revert: {\n            description: '恢复前一个提交',\n            title: 'Reverts',\n            emoji: '🗑',\n          },\n        },\n      },\n      scope: {\n        description: '此更改的范围是什么(例如:组件或文件名)',\n      },\n      subject: {\n        description: '用简短的祈使语句描述变化',\n      },\n      body: {\n        description: '对变更提供更详细的描述',\n      },\n      isBreaking: {\n        description: '有什么突破性的变化吗?',\n      },\n      breakingBody: {\n        description: '中断变更提交需要一个主体. 请输入提交本身的更长的描述',\n      },\n      breaking: {\n        description: '描述突破性的变化',\n      },\n      isIssueAffected: {\n        description: '这个变化会影响任何未决问题吗?',\n      },\n      issuesBody: {\n        description:\n          '如果问题被关闭, 则提交需要一个主体. 请输入提交本身的更长的描述',\n      },\n      issues: {\n        description: '添加问题引用(例如:\"fix #123\",  \"re #123\".)',\n      },\n    },\n  },\n};\n";
export {};
